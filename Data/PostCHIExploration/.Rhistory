exact = FALSE)
print(results)
?var
?var.test
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "more",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "greater",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
eg_high_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Window1")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Window1")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
eg_high_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Window1")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Window1")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
alternative = "two.sided",
#alternative = "less",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
eg_high_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Window1")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Window1")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
#alternative = "less",
alternative = "greater",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
eg_high_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Window1")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Conference_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Window1")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
#alternative = "greater",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
eg_high_office <- read.csv("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Window1")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Window1")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
#alternative = "greater",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
usability_wilcoxin_movement("AR", "Office", "Rotation.Classification", "Physical_Demand_Score")
usability_wilcoxin_movement("AR", "Office", "Gaze.Classification", "Physical_Demand_Score")
usability_wilcoxin_movement("AR", "Office", "Gaze.Classification", "Head.Ratio")
usability_wilcoxin_movement("AR", "Office", "Gaze.Classification", "Movement.Ratio")
eg_high_office <- read.csv("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Floor")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Floor")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
#alternative = "greater",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
eg_high_office <- read.csv("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
header=TRUE,
sep=",")
eg_high_office <- subset(eg_high_office, Surface=="Window1")
#eg_high_office$normalized <- eg_high_office$l / max(eg_high_office$e)
eg_low_office <- read.csv("HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
header=TRUE,
sep=",")
eg_low_office <- subset(eg_low_office, Surface=="Window1")
#eg_low_office$normalized <- eg_low_office$l / max(eg_low_office$e)
results <- var.test(x = eg_high_office$l,
y = eg_low_office$l,
paired = FALSE,
#alternative = "two.sided",
alternative = "less",
#alternative = "greater",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
results <- var.test(x = high$l,
y = low$l,
paired = FALSE,
#alternative = "two.sided",
#alternative = "less",
#alternative = "greater",
alternative = test_type,
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
}
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",)
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"two.sided")
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
results <- var.test(x = high$l,
y = low$l,
paired = FALSE,
#alternative = "two.sided",
#alternative = "less",
#alternative = "greater",
alternative = test_type,
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
}
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"two.sided")
surface_variance("HeatmapData/Viewing_Conference_AR_3_Head_High.csv",
"HeatmapData/Viewing_Conference_AR_3_Head_Low.csv",
"Floor",
"two.sided")
surface_variance("HeatmapData/Viewing_Conference_AR_3_Eye_High.csv",
"HeatmapData/Viewing_Conference_AR_3_Eye_Low.csv",
"Floor",
"two.sided")
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
surface_variance("HeatmapData/Viewing_Office_AR_3_Eye_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Eye_LowGazer.csv",
"Window1",
"less")
surface_variance("HeatmapData/Viewing_Office_AR_3_Eye_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Eye_LowGazer.csv",
"Window1",
"greater")
surface_variance("HeatmapData/Viewing_Conference_AR_3_Eye_High.csv",
"HeatmapData/Viewing_Conference_AR_3_Eye_Low.csv",
"Floor",
"two.sided")
surface_variance("HeatmapData/Standing_Office_AR_3_Eye_HighGazer.csv",
"HeatmapData/Standing_Office_AR_3_Eye_LowGazer.csv",
"Floor",
"less")
surface_variance("HeatmapData/Standing_Office_AR_3_Eye_HighGazer,csv",
"HeatmapData/Standing_Office_AR_3_Eye_LowGazer.csv",
"NA",
"less")
surface_variance("HeatmapData/Standing_Office_AR_3_Eye_HighGazer,csv",
"HeatmapData/Standing_Office_AR_3_Eye_LowGazer.csv",
"NA",
"less")
surface_variance("HeatmapData/Standing_Office_AR_3_Eye_HighGazer.csv",
"HeatmapData/Standing_Office_AR_3_Eye_LowGazer.csv",
"NA",
"less")
surface_variance("HeatmapData/Standing_Office_AR_3_Eye_HighGazer.csv",
"HeatmapData/Standing_Office_AR_3_Eye_LowGazer.csv",
"Standing",
"less")
d1 <- read.csv("Standing_Office_AR_3_Eye_HighGazer.csv",
header=TRUE,
sep=",")
?shapiro.test
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
print(shapiro.test(high$l))
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
print(shapiro.test(low$l))
results <- var.test(x = high$l,
y = low$l,
paired = FALSE,
#alternative = "two.sided",
#alternative = "less",
#alternative = "greater",
alternative = test_type,
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
}
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
?leveneTest
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
print(shapiro.test(high$l))
high$HighLow <- "High"
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
print(shapiro.test(low$l))
low$HighLow <- "Low"
var_data <- select(rbind(high, low), c("l", "HighLow"))
# results <- var.test(x = high$l,
#                     y = low$l,
#                     paired = FALSE,
#                     #alternative = "two.sided",
#                     #alternative = "less",
#                     #alternative = "greater",
#                     alternative = test_type,
#                     conf.level = 0.95,
#                     conf.int = TRUE,
#                     exact = FALSE)
results <- var.test(var_data$l ~ var_data$HighLow
paired = FALSE,
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
print(shapiro.test(high$l))
high$HighLow <- "High"
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
print(shapiro.test(low$l))
low$HighLow <- "Low"
var_data <- select(rbind(high, low), c("l", "HighLow"))
# results <- var.test(x = high$l,
#                     y = low$l,
#                     paired = FALSE,
#                     #alternative = "two.sided",
#                     #alternative = "less",
#                     #alternative = "greater",
#                     alternative = test_type,
#                     conf.level = 0.95,
#                     conf.int = TRUE,
#                     exact = FALSE)
results <- var.test(var_data$l ~ var_data$HighLow,
paired = FALSE,
#alternative = "two.sided",
#alternative = "less",
#alternative = "greater",
alternative = test_type,
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
}
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
?leveneTest
??leveneTest
library(car)
?leveneTest
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
print(shapiro.test(high$l))
high$HighLow <- "High"
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
print(shapiro.test(low$l))
low$HighLow <- "Low"
var_data <- select(rbind(high, low), c("l", "HighLow"))
# results <- var.test(var_data$l ~ var_data$HighLow,
#                     paired = FALSE,
#                     #alternative = "two.sided",
#                     #alternative = "less",
#                     #alternative = "greater",
#                     alternative = test_type,
#                     conf.level = 0.95,
#                     conf.int = TRUE,
#                     exact = FALSE)
results <- leveneTest(var_data$l ~ var_data$HighLow,
paired = FALSE,
#alternative = "two.sided",
#alternative = "less",
#alternative = "greater",
alternative = test_type,
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
}
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
surface_variance("HeatmapData/Viewing_Conference_AR_3_Eye_High.csv",
"HeatmapData/Viewing_Conference_AR_3_Eye_Low.csv",
"Floor",
"two.sided")
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"greater")
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
surface_variance <- function(high_filname, low_filename, surface_name, test_type) {
high <- read.csv(high_filname,
header=TRUE,
sep=",")
high <- subset(high, Surface==surface_name)
# high$normalized <- high$l / max(high$e)
print(shapiro.test(high$l))
high$HighLow <- "High"
low <- read.csv(low_filename,
header=TRUE,
sep=",")
low <- subset(low, Surface==surface_name)
# low$normalized <- low$l / max(low$e)
print(shapiro.test(low$l))
low$HighLow <- "Low"
var_data <- select(rbind(high, low), c("l", "HighLow"))
# results <- var.test(var_data$l ~ var_data$HighLow,
#                     paired = FALSE,
#                     #alternative = "two.sided",
#                     #alternative = "less",
#                     #alternative = "greater",
#                     alternative = test_type,
#                     conf.level = 0.95,
#                     conf.int = TRUE,
#                     exact = FALSE)
results <- leveneTest(var_data$l ~ var_data$HighLow)
print(results)
#print(cohen.d(eg_high_office$normalized, eg_low_office$normalized))
}
surface_variance("HeatmapData/Viewing_Office_AR_3_Head_HighGazer.csv",
"HeatmapData/Viewing_Office_AR_3_Head_LowGazer.csv",
"Window1",
"less")
source("~/AR_Facades/Data/PostCHIExploration/ExploringData.R", echo=TRUE)
source("~/AR_Facades/Data/PostCHIExploration/ExploringData.R", echo=TRUE)
source("~/AR_Facades/Data/PostCHIExploration/ExploringData.R", echo=TRUE)
source("~/AR_Facades/Data/PostCHIExploration/ExploringData.R", echo=TRUE)
usability_wilcoxin_room("Office", "Rank")
usability_wilcoxin_room("Office", "Rank")
condition <- "AR"
metric <- "Rank"
subjects <- select(subset(subjects_data, Condition==condition), c("Room", metric))
View(subjects)
View(mf)
results <- wilcox.test(subjects[[metric]] ~ subjects$Room,
paired = FALSE,
alternative = "two.sided",
conf.level = 0.95,
conf.int = TRUE,
exact = FALSE)
print(results)
print(cohen.d(subjects[[metric]], subjects$Room))
sink()
print(results)
print(results)
print("HI")
source("~/AR_Facades/Data/PostCHIExploration/ExploringData.R", echo=TRUE)
subjects_data
print(usability_wilcoxin_room)
